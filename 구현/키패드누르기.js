// [문제 이름]
// : 키패드 누르기

// [문제 설명]
// : 스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다.

// 이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.
// 맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다.

// 엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거리로 1에 해당합니다.
// 왼쪽 열의 3개의 숫자 1, 4, 7을 입력할 때는 왼손 엄지손가락을 사용합니다.
// 오른쪽 열의 3개의 숫자 3, 6, 9를 입력할 때는 오른손 엄지손가락을 사용합니다.
// 가운데 열의 4개의 숫자 2, 5, 8, 0을 입력할 때는 두 엄지손가락의 현재 키패드의 위치에서 더 가까운 엄지손가락을 사용합니다.
// 4-1. 만약 두 엄지손가락의 거리가 같다면, 오른손잡이는 오른손 엄지손가락, 왼손잡이는 왼손 엄지손가락을 사용합니다.
// 순서대로 누를 번호가 담긴 배열 numbers, 왼손잡이인지 오른손잡이인 지를 나타내는 문자열 hand가 매개변수로 주어질 때, 각 번호를 누른 엄지손가락이 왼손인 지 오른손인 지를 나타내는 연속된 문자열 형태로 return 하도록 solution 함수를 완성해주세요.

// [문제 링크]
// : https://school.programmers.co.kr/learn/courses/30/lessons/67256?language=javascript

function solution(numbers, hand) {
  var answer = '';
  // 초기 왼손, 오른손 위치
  let [l, r] = ['*', '#'];
  // 키패드의 좌표를 [x,y] 형태로 담은 객체
  let keypad = {
    '*': [0, 0],
    0: [1, 0],
    '#': [2, 0],

    7: [0, 1],
    8: [1, 1],
    9: [2, 1],

    4: [0, 2],
    5: [1, 2],
    6: [2, 2],

    1: [0, 3],
    2: [1, 3],
    3: [2, 3],
  };

  for (i of numbers) {
    // 해당 숫자는 무조건 왼쪽. 왼손의 위치도 바꿔준다.
    if ([1, 4, 7, '*'].includes(i)) {
      answer += 'L';
      l = i;
    }
    // 해당 숫자는 무조건 오른쪽. 오른손의 위치도 바꿔준다.
    else if ([3, 6, 9, '#'].includes(i)) {
      answer += 'R';
      r = i;
    }
    // 같은 경우 왼손의 이동거리와 오른손의 이동거리를 비교한다.
    // 이동거리 = (x1-x2) + (y1-y2)
    else {
      const l_dist =
        Math.abs(keypad[l][0] - keypad[i][0]) +
        Math.abs(keypad[l][1] - keypad[i][1]);
      const r_dist =
        Math.abs(keypad[r][0] - keypad[i][0]) +
        Math.abs(keypad[r][1] - keypad[i][1]);

      if (l_dist > r_dist) {
        answer += 'R';
        r = i;
      } else if (l_dist < r_dist) {
        answer += 'L';
        l = i;
      }

      // 거리가 같다면 왼손잡이인지 오른손잡이인지 체크
      else {
        if (hand === 'left') {
          answer += 'L';
          l = i;
        } else {
          answer += 'R';
          r = i;
        }
      }
    }
  }
  return answer;
}

console.log(solution([1, 3, 4, 5, 8, 2, 1, 4, 5, 9, 5], 'right'));
